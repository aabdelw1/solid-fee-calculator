{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Ammar/Documents/coding-solution/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Page from '../components/Page';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          apollo = _this$props.apollo,\n          pageProps = _this$props.pageProps;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                // this exposes the query to the user\n                pageProps.query = ctx.query;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/Ammar/Documents/coding-solution/pages/_app.js"],"names":["React","App","Page","ApolloProvider","withData","MyApp","props","Component","apollo","pageProps","ctx","getInitialProps","query"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;IAEMC,K;;;;;;;;;;;;;6BAWM;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UACmBC,SADnB,eACmBA,SADnB;AAER,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF;AAOD;;;;;;;;;;;;AAnB+BF,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACrCD,gBAAAA,S,GAAY,E;;qBACZF,SAAS,CAACI,e;;;;;;uBACMJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBD,gBAAAA,S;;;AAEF;AACAA,gBAAAA,SAAS,CAACG,KAAV,GAAkBF,GAAG,CAACE,KAAtB;iDACO;AAAEH,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EARSR,G;;AAuBpB,eAAeG,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Page from '../components/Page'\nimport { ApolloProvider } from 'react-apollo'\nimport withData from '../lib/withData'\n\nclass MyApp extends App {\n  static async getInitialProps ({ Component, ctx }) {\n    let pageProps = {}\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    // this exposes the query to the user\n    pageProps.query = ctx.query\n    return { pageProps }\n  }\n\n  render () {\n    const { Component, apollo, pageProps } = this.props\n    return (\n      <ApolloProvider client={apollo}>\n        <Page>\n          <Component {...pageProps} />\n        </Page>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default withData(MyApp)\n"]},"metadata":{},"sourceType":"module"}