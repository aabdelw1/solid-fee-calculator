{"ast":null,"code":"var _jsxFileName = \"/Users/Ammar/Documents/coding-solution/components/Card.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Badge, Pane, Avatar, Text, IconButton } from 'evergreen-ui'; // import { Icon } from \"@blueprintjs/core\";\n// import CardPopover from './CardPopover'\n\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nvar Card = function Card(props) {\n  var data = props.data,\n      index = props.index;\n  var item = data.item,\n      category = data.category,\n      userType = data.userType,\n      adType = data.adType,\n      price = data.price,\n      expiration = data.expiration,\n      fee = data.fee; // const [visible, setVisible] = useState(false)\n\n  var convertDate = function convertDate(date) {\n    var year = date.split('-')[0];\n    var month = months[date.split('-')[1] - 1];\n    var day = date.split('-')[2];\n    return \"\".concat(month, \" \").concat(day, \", \").concat(year);\n  };\n\n  return __jsx(Pane, {\n    marginRight: \"2rem\",\n    marginLeft: \"2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Pane, {\n    border: \"default\",\n    marginBottom: \"2rem\",\n    display: \"flex\",\n    margin: \"1rem\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    borderRadius: \"2rem\",\n    hoverElevation: 1,\n    background: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Pane, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingY: \"0.1rem\",\n    margin: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    src: \"/static/\".concat(category, \".png\"),\n    name: category,\n    size: 40,\n    marginRight: '1rem',\n    marginLeft: '1rem',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(Pane, {\n    marginY: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Pane, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Heading, {\n    size: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, item), __jsx(Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Text, {\n    size: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, convertDate(expiration)))))), __jsx(Pane, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Pane, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginRight: '4rem',\n    marginY: \"auto\",\n    textAlign: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" \", adType == 25 ? \"Auction\" : \"Buy it Now\", \" $\", price)), __jsx(Pane, {\n    marginY: \"0.1rem\",\n    marginRight: \"0.5rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))));\n};\n\nCard.propTypes = {\n  data: PropTypes.object\n};\nexport default Card;","map":{"version":3,"sources":["/Users/Ammar/Documents/coding-solution/components/Card.js"],"names":["React","useState","PropTypes","Heading","Badge","Pane","Avatar","Text","IconButton","months","Card","props","data","index","item","category","userType","adType","price","expiration","fee","convertDate","date","year","split","month","day","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Heading, Badge, Pane, Avatar, Text, IconButton} from 'evergreen-ui'\n// import { Icon } from \"@blueprintjs/core\";\n// import CardPopover from './CardPopover'\n\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst Card = (props) => {\n  const { data, index } = props\n  const { item, category, userType, adType, price, expiration, fee } = data\n  // const [visible, setVisible] = useState(false)\n\n  const convertDate = (date) => {\n    const year = date.split('-')[0]\n    const month = months[date.split('-')[1]-1]\n    const day = date.split('-')[2]\n\n    return `${month} ${day}, ${year}`\n  }\n\n  return (\n    <Pane marginRight=\"2rem\" marginLeft=\"2rem\">\n    <Pane border=\"default\" marginBottom=\"2rem\" display=\"flex\" margin=\"1rem\" justifyContent='space-between' flexDirection=\"row\" borderRadius={\"2rem\"} hoverElevation={1} background=\"white\">\n      <Pane display=\"flex\" flexDirection=\"row\" paddingY=\"0.1rem\" margin=\"1rem\">\n        <Avatar src={`/static/${category}.png`} name={category} size={40} marginRight={'1rem'} marginLeft={'1rem'}/>\n        <Pane marginY=\"auto\">\n          <Pane display=\"flex\" flexDirection=\"column\">\n            <Heading size={500}>{item}</Heading>\n            <Pane><Text size={300}>{convertDate(expiration)}</Text></Pane>\n          </Pane>\n        </Pane>\n      </Pane>\n      <Pane display=\"flex\" flexDirection=\"row\">\n  <Pane display=\"flex\" flexDirection=\"column\" marginRight={'4rem'} marginY='auto' textAlign=\"right\"><Text> {adType == 25 ? \"Auction\" : \"Buy it Now\"} ${price}</Text></Pane>\n        <Pane marginY='0.1rem' marginRight='0.5rem'></Pane>\n\n      </Pane>\n    </Pane>\n    </Pane>\n  )\n}\n\nCard.propTypes = {\n  data: PropTypes.object\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}